(1)git add :it's function depend on the status of the file self.
(2)Local Operations hava three work area: git directory(repository)/working directory/ staging area.
(3)git add /  git status  / git diff --cached or --staged /git commit <-a or -m > /  git checkout  / git reflog /  git config --global
(4)git log -p -2:last 2 commit content with diff.
(5)git log --stat:show all log & show line num changed
(6)git log :
   -p : show all log with diff
   --stat : show all log with modify file num
   --shortstat 
   --name-only :show all log with only the file list
   --name-status : show logs with the file list which add / modify / delete
   --abbrev-commit :show Before a few letters of SHA-1 
   --relativ-date :show the recenty time log
   --graph : show the commit history with ASCII graph.
   --pretty=[...] : user the special format

   -(n):show last recently "n" commit
   --since,--after :show all the commit after the special time
   --until,--before :show all the commit log after the special time
   --author : show just all the log belongs to the author
   --committer : show just all the log belongs to the commiter


(7)git commit --amend : modify last commit.
(8)git reset HEAD <file>... : to unstage
(9)git checkout <file>...: to discard changes in working directory
(10)git remote -v : see the server repository.
(11)git remote show [remote-name]:see the remote branch msg.

==================git tag============================
(1)git tag : show all tags
(2)git tag -a v1.4 -m 'my version 1.4' :created an annotated tag , need discription.
(3)git show [tag_name]
(4)git tag v1.4-1w : created a tag without description ,it is lightweight
(5)git tage -a v1.2 commit_id : add tag to the commit_id.
(6)git push origin [tagname]:push the tag to origin.


================Basic Snapshotting===============================
(1)git add: adds file contents to the staging area.
(2)git status: view the status of your files in the working directory and staging area.
(3)git diff: shows diff of what is staged and what is modified bu unstaged.
(4)git commit: record a snapshot of the staging area.
(5)git reset: undo change and commit.
(6)git rm: remove files from the staging area.
(7)git mv: git rm --cashed orig; mv orig new; git add new.
(8)git stash: save changes made in the current index and working directroy for later.
================Branching and Merging==============================
(1)git brantch: list,create and manage working contexts.
(2)git checkout <branch_name> :switch to a new branch context.
(3)git merge: merge a branch context to you current one.
(4)git log: show commit history of a branch.

===============Sharing and Updating Projects=======================
(1)git remote: list,add and delete repository aliases.
(2)git fetch: download new branches and data from a remote repository.
(3)git pull: fetch from a remote repository and try to merge ino the current branch.
(4)git push: push you new branches and data to a remote repository


======================================================
https://github.com/git : git source web
https://git-scm.com/ : you can kown every thing about git
http://gitref.org  : It is meant to be a quick reference for learning and remembering the most important and commonly used Git commands.

